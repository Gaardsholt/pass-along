version: 2.1

executors:
  go_image:
    docker:
      - image: cimg/go:1.24.0
  docker_image:
    docker:
      - image: cimg/base:stable

commands:
  docker_build:
    steps:
      - run:
          name: "Docker: Building"
          command: |
            docker build -t gaardsholt/$CIRCLE_PROJECT_REPONAME:latest .
            docker images
  docker_login:
    steps:
      - run:
          name: "Docker: Logging in"
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
  docker_push:
    steps:
      - run:
          name: "Docker: Push"
          command: |
            docker tag gaardsholt/$CIRCLE_PROJECT_REPONAME:latest gaardsholt/$CIRCLE_PROJECT_REPONAME:${CIRCLE_TAG:1}
            docker push gaardsholt/$CIRCLE_PROJECT_REPONAME --all-tags

jobs:
  test:
    executor: go_image
    steps:
      - checkout
      - run:
          name: Download needed tools
          command: |
            go install gotest.tools/gotestsum@latest
      - run:
          name: go mod download
          command: go mod download
      - run:
          name: go vet
          when: always
          command: go vet ./...
      - run:
          name: go fmt
          when: always
          command: |
            gofmt -d -e .
            if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
              exit 1
            fi
      - run:
          name: go test
          when: always
          command: |
            mkdir junit
            gotestsum --junitfile junit/unit-tests.xml
      - store_test_results:
          path: ~/project/junit
  build:
    executor: go_image
    steps:
      - checkout
      - run:
          name: go get
          command: |
            go get ./...
      - run:
          name: go build
          command: |
            go build -ldflags="-w -s"
  build_docker:
    executor: docker_image
    steps:
      - setup_remote_docker
      - checkout
      - docker_build


workflows:
  test_n_build:
    jobs:
      - test:
          filters:
            tags:
              ignore: /^v([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/
      - build:
          requires:
            - test
          filters:
            tags:
              ignore: /^v([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/
      - build_docker:
          requires:
            - test
          filters:
            tags:
              ignore: /^v([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/
  publish:
    jobs:
      - build_docker:
          context: gaardsholt
          filters:
            tags:
              only: /^v([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/
            branches:
              ignore: /.*/
          post-steps:
              - docker_login
              - docker_push
